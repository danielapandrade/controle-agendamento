{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/agendamento.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nclass CadastrarAgendamentoComponent {\n  constructor(agendamentoService) {\n    this.agendamentoService = agendamentoService;\n    this.agendamento = {};\n  }\n  ngOnInit() {\n    this.getAgendamentos();\n  }\n  saveAgendamento(form) {\n    if (this.agendamento.id !== undefined) {\n      this.agendamentoService.updateAgendamento(this.agendamento).subscribe(() => {\n        this.cleanForm(form);\n      });\n    } else {\n      this.agendamentoService.saveAgendamento(this.agendamento).subscribe(() => {\n        this.cleanForm(form);\n      });\n    }\n  }\n  getAgendamentos() {\n    this.agendamentoService.getAgendamentos().subscribe(agendamentos => {\n      this.agendamentos = agendamentos;\n    });\n  }\n  deleteAgendamento(agendamento) {\n    this.agendamentoService.deleteAgendamento(agendamento).subscribe(() => {\n      this.getAgendamentos();\n    });\n  }\n  editAgendamento(agendamento) {\n    this.agendamento = {\n      ...agendamento\n    };\n  }\n  cleanForm(form) {\n    this.getAgendamentos();\n    form.resetForm();\n    this.agendamento = {};\n  }\n}\nCadastrarAgendamentoComponent.ɵfac = function CadastrarAgendamentoComponent_Factory(t) {\n  return new (t || CadastrarAgendamentoComponent)(i0.ɵɵdirectiveInject(i1.AgendamentoService));\n};\nCadastrarAgendamentoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CadastrarAgendamentoComponent,\n  selectors: [[\"app-cadastrar-agendamento\"]],\n  decls: 15,\n  vars: 4,\n  consts: [[1, \"card\", \"add-car\"], [1, \"card-header\"], [1, \"card-body\"], [\"id\", \"add-form\", \"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"model\"], [\"type\", \"text\", \"id\", \"item\", \"name\", \"item\", \"required\", \"\", \"placeholder\", \"Digite o modelo\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"model\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-add-car\"], [\"type\", \"reset\", 1, \"btn\", \"btn-secondary\", \"btn-add-car\", 3, \"click\"]],\n  template: function CadastrarAgendamentoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h5\", 1);\n      i0.ɵɵtext(2, \"Adicionar/Atualizar carro\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function CadastrarAgendamentoComponent_Template_form_ngSubmit_4_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(_r0.form.valid && ctx.saveAgendamento(_r0));\n      });\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Modelo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 7, 8);\n      i0.ɵɵlistener(\"ngModelChange\", function CadastrarAgendamentoComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.agendamento.item = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"button\", 9);\n      i0.ɵɵtext(12, \"Salvar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function CadastrarAgendamentoComponent_Template_button_click_13_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.cleanForm(_r0));\n      });\n      i0.ɵɵtext(14, \"Cancelar\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n      const _r1 = i0.ɵɵreference(10);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.agendamento.item)(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, _r0.submitted && _r1.invalid));\n    }\n  },\n  dependencies: [i2.NgClass, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CadastrarAgendamentoComponent };","map":{"version":3,"names":["CadastrarAgendamentoComponent","constructor","agendamentoService","agendamento","ngOnInit","getAgendamentos","saveAgendamento","form","id","undefined","updateAgendamento","subscribe","cleanForm","agendamentos","deleteAgendamento","editAgendamento","resetForm","i0","ɵɵdirectiveInject","i1","AgendamentoService","selectors","decls","vars","consts","template","CadastrarAgendamentoComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CadastrarAgendamentoComponent_Template_form_ngSubmit_4_listener","ɵɵrestoreView","_r2","_r0","ɵɵreference","ɵɵresetView","valid","CadastrarAgendamentoComponent_Template_input_ngModelChange_9_listener","$event","item","CadastrarAgendamentoComponent_Template_button_click_13_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","submitted","_r1","invalid"],"sources":["C:\\Users\\daniela\\Desktop\\test\\controle-agendamento\\src\\app\\cadastrar-agendamento\\cadastrar-agendamento.component.ts","C:\\Users\\daniela\\Desktop\\test\\controle-agendamento\\src\\app\\cadastrar-agendamento\\cadastrar-agendamento.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Agendamento } from '../model/agendamento';\nimport { AgendamentoService } from '../services/agendamento.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-cadastrar-agendamento',\n  templateUrl: './cadastrar-agendamento.component.html',\n  styleUrls: ['./cadastrar-agendamento.component.css']\n})\nexport class CadastrarAgendamentoComponent {\n\n  agendamento = {} as Agendamento;\n  agendamentos: Agendamento [];\n\n  constructor(private agendamentoService: AgendamentoService) {}\n  \n  ngOnInit() {\n    this.getAgendamentos();\n  }\n\n  saveAgendamento(form: NgForm) {\n    if (this.agendamento.id !== undefined) {\n      this.agendamentoService.updateAgendamento(this.agendamento).subscribe(() => {\n        this.cleanForm(form);\n      });\n    } else {\n      this.agendamentoService.saveAgendamento(this.agendamento).subscribe(() => {\n        this.cleanForm(form);\n      });\n    }\n  }\n\n  getAgendamentos() {\n    this.agendamentoService.getAgendamentos().subscribe((agendamentos: Agendamento[]) => {\n      this.agendamentos = agendamentos;\n    });\n  }\n\n  deleteAgendamento(agendamento: Agendamento) {\n    this.agendamentoService.deleteAgendamento(agendamento).subscribe(() => {\n      this.getAgendamentos();\n    });\n  }\n \n  editAgendamento(agendamento: Agendamento) {\n    this.agendamento = { ...agendamento };\n  }\n\n  cleanForm(form: NgForm) {\n    this.getAgendamentos();\n    form.resetForm();\n    this.agendamento = {} as Agendamento;\n  }\n\n}\n","\n<div class=\"card add-car\">\n    <h5 class=\"card-header\">Adicionar/Atualizar carro</h5>\n    <div class=\"card-body\">\n        <form id=\"add-form\" (ngSubmit)=\"f.form.valid && saveAgendamento(f)\" #f=\"ngForm\" novalidate>\n          <div class=\"form-group\">\n              <label for=\"model\">Modelo</label>\n              <input type=\"text\" [(ngModel)]=\"agendamento.item\" id=\"item\" name=\"item\" #model=\"ngModel\" required class=\"form-control\" [ngClass]=\"{ 'is-invalid': f.submitted && model.invalid }\" placeholder=\"Digite o modelo\">\n            \n          </div>\n        \n          <button type=\"submit\" class=\"btn btn-primary btn-add-car\">Salvar</button>\n          <button type=\"reset\" class=\"btn btn-secondary btn-add-car\" (click)=\"cleanForm(f)\">Cancelar</button>\n        </form>\n    </div>\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}