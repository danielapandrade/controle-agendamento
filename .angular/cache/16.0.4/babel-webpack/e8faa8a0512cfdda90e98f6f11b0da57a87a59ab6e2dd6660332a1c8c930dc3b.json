{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MainPanelComponent = class MainPanelComponent {\n  constructor(agendamentoService) {\n    this.agendamentoService = agendamentoService;\n    this.agendamento = {};\n    this.editar = \"Editar\";\n    this.isVisible = false;\n  }\n  ngOnInit() {\n    this.getAgendamentos();\n  }\n  saveAgendamento(form) {\n    if (this.agendamento.id !== undefined) {\n      this.agendamentoService.updateAgendamento(this.agendamento).subscribe(() => {\n        this.cleanForm(form);\n      });\n    } else {\n      this.agendamentoService.saveAgendamento(this.agendamento).subscribe(() => {\n        this.cleanForm(form);\n      });\n    }\n  }\n  getAgendamentos() {\n    this.agendamentoService.getAgendamentos().subscribe(agendamentos => {\n      this.agendamentos = agendamentos;\n    });\n  }\n  deleteAgendamento(agendamento) {\n    this.agendamentoService.deleteAgendamento(agendamento).subscribe(() => {\n      this.getAgendamentos();\n    });\n  }\n  editAgendamento(agendamento) {\n    this.agendamento = {\n      ...agendamento\n    };\n  }\n  cleanForm(form) {\n    this.getAgendamentos();\n    form.resetForm();\n    this.agendamento = {};\n  }\n  editarItem(item) {\n    item.isEdit = true;\n  }\n  onEdit(item) {\n    item.isEdit = false;\n    this.agendamento = {\n      ...item\n    };\n    this.agendamentoService.updateAgendamento(this.agendamento).subscribe(() => {\n      this.cleanForm(this.formAgendamento);\n    });\n  }\n};\nMainPanelComponent = __decorate([Component({\n  selector: 'app-main-panel',\n  templateUrl: './main-panel.component.html',\n  styleUrls: ['./main-panel.component.css']\n})], MainPanelComponent);\nexport { MainPanelComponent };","map":{"version":3,"names":["Component","MainPanelComponent","constructor","agendamentoService","agendamento","editar","isVisible","ngOnInit","getAgendamentos","saveAgendamento","form","id","undefined","updateAgendamento","subscribe","cleanForm","agendamentos","deleteAgendamento","editAgendamento","resetForm","editarItem","item","isEdit","onEdit","formAgendamento","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\daniela\\controle-agendamento\\src\\app\\main-panel\\main-panel.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Agendamento } from '../model/agendamento';\r\nimport { AgendamentoService } from '../services/agendamento.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { elementAt } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-main-panel',\r\n  templateUrl: './main-panel.component.html',\r\n  styleUrls: ['./main-panel.component.css']\r\n})\r\nexport class MainPanelComponent {\r\n\r\n  agendamento = {} as Agendamento;\r\n  agendamentos: Agendamento[];\r\n  editar = \"Editar\";\r\n  formAgendamento: NgForm;\r\n  isVisible = false;\r\n\r\n  constructor(private agendamentoService: AgendamentoService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAgendamentos();\r\n\r\n  }\r\n\r\n  saveAgendamento(form: NgForm) {\r\n    if (this.agendamento.id !== undefined) {\r\n      this.agendamentoService.updateAgendamento(this.agendamento).subscribe(() => {\r\n        this.cleanForm(form);\r\n\r\n      });\r\n    } else {\r\n      this.agendamentoService.saveAgendamento(this.agendamento).subscribe(() => {\r\n        \r\n        this.cleanForm(form);\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  getAgendamentos() {\r\n    this.agendamentoService.getAgendamentos().subscribe((agendamentos: Agendamento[]) => {\r\n      this.agendamentos = agendamentos;\r\n\r\n    });\r\n  }\r\n\r\n  deleteAgendamento(agendamento: Agendamento) {\r\n    this.agendamentoService.deleteAgendamento(agendamento).subscribe(() => {\r\n      this.getAgendamentos();\r\n    });\r\n  }\r\n\r\n  editAgendamento(agendamento: Agendamento) {\r\n    this.agendamento = { ...agendamento };\r\n  }\r\n\r\n  cleanForm(form: NgForm) {\r\n    this.getAgendamentos();\r\n    form.resetForm();\r\n    this.agendamento = {} as Agendamento;\r\n  }\r\n\r\n  editarItem(item: Agendamento) {\r\n    item.isEdit = true;\r\n  }\r\n\r\n  onEdit(item: Agendamento) {\r\n\r\n    item.isEdit = false;\r\n    this.agendamento = { ...item }\r\n    this.agendamentoService.updateAgendamento(this.agendamento).subscribe(() => {\r\n      this.cleanForm(this.formAgendamento);\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAYzC,IAAaC,kBAAkB,GAA/B,MAAaA,kBAAkB;EAQ7BC,YAAoBC,kBAAsC;IAAtC,KAAAA,kBAAkB,GAAlBA,kBAAkB;IANtC,KAAAC,WAAW,GAAG,EAAiB;IAE/B,KAAAC,MAAM,GAAG,QAAQ;IAEjB,KAAAC,SAAS,GAAG,KAAK;EAIjB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EAExB;EAEAC,eAAeA,CAACC,IAAY;IAC1B,IAAI,IAAI,CAACN,WAAW,CAACO,EAAE,KAAKC,SAAS,EAAE;MACrC,IAAI,CAACT,kBAAkB,CAACU,iBAAiB,CAAC,IAAI,CAACT,WAAW,CAAC,CAACU,SAAS,CAAC,MAAK;QACzE,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;MAEtB,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACP,kBAAkB,CAACM,eAAe,CAAC,IAAI,CAACL,WAAW,CAAC,CAACU,SAAS,CAAC,MAAK;QAEvE,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;MAEtB,CAAC,CAAC;;EAEN;EAEAF,eAAeA,CAAA;IACb,IAAI,CAACL,kBAAkB,CAACK,eAAe,EAAE,CAACM,SAAS,CAAEE,YAA2B,IAAI;MAClF,IAAI,CAACA,YAAY,GAAGA,YAAY;IAElC,CAAC,CAAC;EACJ;EAEAC,iBAAiBA,CAACb,WAAwB;IACxC,IAAI,CAACD,kBAAkB,CAACc,iBAAiB,CAACb,WAAW,CAAC,CAACU,SAAS,CAAC,MAAK;MACpE,IAAI,CAACN,eAAe,EAAE;IACxB,CAAC,CAAC;EACJ;EAEAU,eAAeA,CAACd,WAAwB;IACtC,IAAI,CAACA,WAAW,GAAG;MAAE,GAAGA;IAAW,CAAE;EACvC;EAEAW,SAASA,CAACL,IAAY;IACpB,IAAI,CAACF,eAAe,EAAE;IACtBE,IAAI,CAACS,SAAS,EAAE;IAChB,IAAI,CAACf,WAAW,GAAG,EAAiB;EACtC;EAEAgB,UAAUA,CAACC,IAAiB;IAC1BA,IAAI,CAACC,MAAM,GAAG,IAAI;EACpB;EAEAC,MAAMA,CAACF,IAAiB;IAEtBA,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAAClB,WAAW,GAAG;MAAE,GAAGiB;IAAI,CAAE;IAC9B,IAAI,CAAClB,kBAAkB,CAACU,iBAAiB,CAAC,IAAI,CAACT,WAAW,CAAC,CAACU,SAAS,CAAC,MAAK;MACzE,IAAI,CAACC,SAAS,CAAC,IAAI,CAACS,eAAe,CAAC;IAEtC,CAAC,CAAC;EAGJ;CAGD;AAxEYvB,kBAAkB,GAAAwB,UAAA,EAL9BzB,SAAS,CAAC;EACT0B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACW3B,kBAAkB,CAwE9B;SAxEYA,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}