{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AgendamentoService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://localhost:3000/agendamentos';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getAgendamentos() {\n    return this.httpClient.get(this.url).pipe(retry(2), catchError(this.handleError));\n  }\n  getAgendamentoById(id) {\n    return this.httpClient.get(this.url + '/' + id).pipe(retry(2), catchError(this.handleError));\n  }\n  saveAgendamento(agendamento) {\n    agendamento.status = \"Aguardando autorização\";\n    return this.httpClient.post(this.url, JSON.stringify(agendamento), this.httpOptions).pipe(retry(2), catchError(this.handleError));\n  }\n  updateAgendamento(agendamento) {\n    return this.httpClient.put(this.url + '/' + agendamento.id, JSON.stringify(agendamento), this.httpOptions).pipe(retry(1), catchError(this.handleError));\n  }\n  deleteAgendamento(agendamento) {\n    return this.httpClient.delete(this.url + '/' + agendamento.id, this.httpOptions).pipe(retry(1), catchError(this.handleError));\n  }\n  // Manipulação de erros\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Erro ocorreu no lado do client\n      errorMessage = error.error.message;\n    } else {\n      // Erro ocorreu no lado do servidor\n      errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\nAgendamentoService.ɵfac = function AgendamentoService_Factory(t) {\n  return new (t || AgendamentoService)(i0.ɵɵinject(i1.HttpClient));\n};\nAgendamentoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AgendamentoService,\n  factory: AgendamentoService.ɵfac,\n  providedIn: 'root'\n});\nexport { AgendamentoService };","map":{"version":3,"names":["HttpHeaders","throwError","retry","catchError","AgendamentoService","constructor","httpClient","url","httpOptions","headers","getAgendamentos","get","pipe","handleError","getAgendamentoById","id","saveAgendamento","agendamento","status","post","JSON","stringify","updateAgendamento","put","deleteAgendamento","delete","error","errorMessage","ErrorEvent","message","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\daniela\\controle-agendamento\\src\\app\\services\\agendamento.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Agendamento } from '../model/agendamento';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgendamentoService {\r\n\r\n  \r\n\r\n\r\n  url = 'http://localhost:3000/agendamentos'; \r\n  item: any;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n\r\n\r\n \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n \r\n  getAgendamentos(): Observable<Agendamento[]> {\r\n    return this.httpClient.get<Agendamento[]>(this.url)\r\n      .pipe(\r\n        retry(2),\r\n        catchError(this.handleError))\r\n  }\r\n\r\n\r\n \r\n  getAgendamentoById(id: number): Observable<Agendamento> {\r\n    return this.httpClient.get<Agendamento>(this.url + '/' + id)\r\n      .pipe(\r\n        retry(2),\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n\r\n  saveAgendamento(agendamento: Agendamento): Observable<Agendamento> {\r\n    agendamento.status=\"Aguardando autorização\"\r\n    \r\n    return this.httpClient.post<Agendamento>(this.url, JSON.stringify(agendamento), this.httpOptions)\r\n      .pipe(\r\n        retry(2),\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n \r\n  updateAgendamento(agendamento: Agendamento): Observable<Agendamento> {\r\n    return this.httpClient.put<Agendamento>(this.url + '/' + agendamento.id, JSON.stringify(agendamento), this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n\r\n  deleteAgendamento(agendamento: Agendamento) {\r\n    return this.httpClient.delete<Agendamento>(this.url + '/' + agendamento.id, this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  // Manipulação de erros\r\n  handleError(error: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Erro ocorreu no lado do client\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Erro ocorreu no lado do servidor\r\n      errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  };\r\n\r\n}"],"mappings":"AACA,SAAwCA,WAAW,QAAQ,sBAAsB;AACjF,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,KAAK,EAAEC,UAAU,QAAQ,gBAAgB;;;AAKlD,MAGaC,kBAAkB;EAQ7BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAH9B,KAAAC,GAAG,GAAG,oCAAoC;IAQ1C,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIT,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAP6C;EAc9CU,eAAeA,CAAA;IACb,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAgB,IAAI,CAACJ,GAAG,CAAC,CAChDK,IAAI,CACHV,KAAK,CAAC,CAAC,CAAC,EACRC,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAAC;EACnC;EAIAC,kBAAkBA,CAACC,EAAU;IAC3B,OAAO,IAAI,CAACT,UAAU,CAACK,GAAG,CAAc,IAAI,CAACJ,GAAG,GAAG,GAAG,GAAGQ,EAAE,CAAC,CACzDH,IAAI,CACHV,KAAK,CAAC,CAAC,CAAC,EACRC,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAC7B;EACL;EAGAG,eAAeA,CAACC,WAAwB;IACtCA,WAAW,CAACC,MAAM,GAAC,wBAAwB;IAE3C,OAAO,IAAI,CAACZ,UAAU,CAACa,IAAI,CAAc,IAAI,CAACZ,GAAG,EAAEa,IAAI,CAACC,SAAS,CAACJ,WAAW,CAAC,EAAE,IAAI,CAACT,WAAW,CAAC,CAC9FI,IAAI,CACHV,KAAK,CAAC,CAAC,CAAC,EACRC,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAC7B;EACL;EAGAS,iBAAiBA,CAACL,WAAwB;IACxC,OAAO,IAAI,CAACX,UAAU,CAACiB,GAAG,CAAc,IAAI,CAAChB,GAAG,GAAG,GAAG,GAAGU,WAAW,CAACF,EAAE,EAAEK,IAAI,CAACC,SAAS,CAACJ,WAAW,CAAC,EAAE,IAAI,CAACT,WAAW,CAAC,CACpHI,IAAI,CACHV,KAAK,CAAC,CAAC,CAAC,EACRC,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAC7B;EACL;EAGAW,iBAAiBA,CAACP,WAAwB;IACxC,OAAO,IAAI,CAACX,UAAU,CAACmB,MAAM,CAAc,IAAI,CAAClB,GAAG,GAAG,GAAG,GAAGU,WAAW,CAACF,EAAE,EAAE,IAAI,CAACP,WAAW,CAAC,CAC1FI,IAAI,CACHV,KAAK,CAAC,CAAC,CAAC,EACRC,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAC7B;EACL;EAEA;EACAA,WAAWA,CAACa,KAAwB;IAClC,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrC;MACAD,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACG,OAAO;KACnC,MAAM;MACL;MACAF,YAAY,GAAG,mBAAmBD,KAAK,CAACR,MAAM,IAAI,GAAG,cAAcQ,KAAK,CAACG,OAAO,EAAE;;IAEpFC,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;IACzB,OAAO1B,UAAU,CAAC0B,YAAY,CAAC;EACjC;;AAhFWvB,kBAAkB,C;mBAAlBA,kBAAkB,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAlB/B,kBAAkB,C;SAAlBA,kBAAkB;EAAAgC,OAAA,EAAlBhC,kBAAkB,CAAAiC,IAAA;EAAAC,UAAA,EAFjB;AAAM;SAEPlC,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}