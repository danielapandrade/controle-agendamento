{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/agendamento.service\";\nclass CadastrarAgendamentoComponent {\n  constructor(agendamentoService) {\n    this.agendamentoService = agendamentoService;\n    this.agendamento = {};\n  }\n  ngOnInit() {\n    this.getAgendamentos();\n  }\n  saveAgendamento(form) {\n    if (this.agendamento.id !== undefined) {\n      this.agendamentoService.updateAgendamento(this.agendamento).subscribe(() => {\n        this.cleanForm(form);\n      });\n    } else {\n      this.agendamentoService.saveAgendamento(this.agendamento).subscribe(() => {\n        this.cleanForm(form);\n      });\n    }\n  }\n  getAgendamentos() {\n    this.agendamentoService.getAgendamentos().subscribe(agendamentos => {\n      this.agendamentos = agendamentos;\n    });\n  }\n  deleteAgendamento(agendamento) {\n    this.agendamentoService.deleteAgendamento(agendamento).subscribe(() => {\n      this.getAgendamentos();\n    });\n  }\n  editAgendamento(agendamento) {\n    this.agendamento = {\n      ...agendamento\n    };\n  }\n  cleanForm(form) {\n    this.getAgendamentos();\n    form.resetForm();\n    this.agendamento = {};\n  }\n}\nCadastrarAgendamentoComponent.ɵfac = function CadastrarAgendamentoComponent_Factory(t) {\n  return new (t || CadastrarAgendamentoComponent)(i0.ɵɵdirectiveInject(i1.AgendamentoService));\n};\nCadastrarAgendamentoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CadastrarAgendamentoComponent,\n  selectors: [[\"app-cadastrar-agendamento\"]],\n  decls: 2,\n  vars: 0,\n  template: function CadastrarAgendamentoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"cadastrar-agendamento works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CadastrarAgendamentoComponent };","map":{"version":3,"names":["CadastrarAgendamentoComponent","constructor","agendamentoService","agendamento","ngOnInit","getAgendamentos","saveAgendamento","form","id","undefined","updateAgendamento","subscribe","cleanForm","agendamentos","deleteAgendamento","editAgendamento","resetForm","i0","ɵɵdirectiveInject","i1","AgendamentoService","selectors","decls","vars","template","CadastrarAgendamentoComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\daniela\\Desktop\\test\\controle-agendamento\\src\\app\\cadastrar-agendamento\\cadastrar-agendamento.component.ts","C:\\Users\\daniela\\Desktop\\test\\controle-agendamento\\src\\app\\cadastrar-agendamento\\cadastrar-agendamento.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Agendamento } from '../model/agendamento';\nimport { AgendamentoService } from '../services/agendamento.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-cadastrar-agendamento',\n  templateUrl: './cadastrar-agendamento.component.html',\n  styleUrls: ['./cadastrar-agendamento.component.css']\n})\nexport class CadastrarAgendamentoComponent {\n\n  agendamento = {} as Agendamento;\n  agendamentos: Agendamento [];\n\n  constructor(private agendamentoService: AgendamentoService) {}\n  \n  ngOnInit() {\n    this.getAgendamentos();\n  }\n\n  saveAgendamento(form: NgForm) {\n    if (this.agendamento.id !== undefined) {\n      this.agendamentoService.updateAgendamento(this.agendamento).subscribe(() => {\n        this.cleanForm(form);\n      });\n    } else {\n      this.agendamentoService.saveAgendamento(this.agendamento).subscribe(() => {\n        this.cleanForm(form);\n      });\n    }\n  }\n\n  getAgendamentos() {\n    this.agendamentoService.getAgendamentos().subscribe((agendamentos: Agendamento[]) => {\n      this.agendamentos = agendamentos;\n    });\n  }\n\n  deleteAgendamento(agendamento: Agendamento) {\n    this.agendamentoService.deleteAgendamento(agendamento).subscribe(() => {\n      this.getAgendamentos();\n    });\n  }\n \n  editAgendamento(agendamento: Agendamento) {\n    this.agendamento = { ...agendamento };\n  }\n\n  cleanForm(form: NgForm) {\n    this.getAgendamentos();\n    form.resetForm();\n    this.agendamento = {} as Agendamento;\n  }\n\n}\n","<p>cadastrar-agendamento works!</p>\n"],"mappings":";;AAKA,MAKaA,6BAA6B;EAKxCC,YAAoBC,kBAAsC;IAAtC,KAAAA,kBAAkB,GAAlBA,kBAAkB;IAHtC,KAAAC,WAAW,GAAG,EAAiB;EAG8B;EAE7DC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAC,eAAeA,CAACC,IAAY;IAC1B,IAAI,IAAI,CAACJ,WAAW,CAACK,EAAE,KAAKC,SAAS,EAAE;MACrC,IAAI,CAACP,kBAAkB,CAACQ,iBAAiB,CAAC,IAAI,CAACP,WAAW,CAAC,CAACQ,SAAS,CAAC,MAAK;QACzE,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;MACtB,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACL,kBAAkB,CAACI,eAAe,CAAC,IAAI,CAACH,WAAW,CAAC,CAACQ,SAAS,CAAC,MAAK;QACvE,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;MACtB,CAAC,CAAC;;EAEN;EAEAF,eAAeA,CAAA;IACb,IAAI,CAACH,kBAAkB,CAACG,eAAe,EAAE,CAACM,SAAS,CAAEE,YAA2B,IAAI;MAClF,IAAI,CAACA,YAAY,GAAGA,YAAY;IAClC,CAAC,CAAC;EACJ;EAEAC,iBAAiBA,CAACX,WAAwB;IACxC,IAAI,CAACD,kBAAkB,CAACY,iBAAiB,CAACX,WAAW,CAAC,CAACQ,SAAS,CAAC,MAAK;MACpE,IAAI,CAACN,eAAe,EAAE;IACxB,CAAC,CAAC;EACJ;EAEAU,eAAeA,CAACZ,WAAwB;IACtC,IAAI,CAACA,WAAW,GAAG;MAAE,GAAGA;IAAW,CAAE;EACvC;EAEAS,SAASA,CAACL,IAAY;IACpB,IAAI,CAACF,eAAe,EAAE;IACtBE,IAAI,CAACS,SAAS,EAAE;IAChB,IAAI,CAACb,WAAW,GAAG,EAAiB;EACtC;;AA3CWH,6BAA6B,C;mBAA7BA,6BAA6B,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,kBAAA;AAAA;AAA7BpB,6BAA6B,C;QAA7BA,6BAA6B;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,uCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV1CT,EAAA,CAAAW,cAAA,QAAG;MAAAX,EAAA,CAAAY,MAAA,mCAA4B;MAAAZ,EAAA,CAAAa,YAAA,EAAI;;;;;SDUtB9B,6BAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}